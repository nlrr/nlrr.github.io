{"meta":{"title":"NLRR'S Blog","subtitle":"","description":"","author":"NLRR","url":"http://nlrr.github.io","root":"/"},"pages":[],"posts":[{"title":"Hello World","slug":"hello-world","date":"2019-11-11T14:11:44.495Z","updated":"2019-11-11T13:43:02.949Z","comments":true,"path":"2019/11/11/hello-world/","link":"","permalink":"http://nlrr.github.io/2019/11/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"【2019】纯小白部署Hexo博客-（一）本地搭建博客","slug":"【2019】纯小白部署Hexo博客-（一）本地搭建博客","date":"2019-11-07T16:00:00.000Z","updated":"2019-11-11T13:53:33.364Z","comments":true,"path":"2019/11/08/【2019】纯小白部署Hexo博客-（一）本地搭建博客/","link":"","permalink":"http://nlrr.github.io/2019/11/08/%E3%80%902019%E3%80%91%E7%BA%AF%E5%B0%8F%E7%99%BD%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2-%EF%BC%88%E4%B8%80%EF%BC%89%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","excerpt":"个人博客，也许是每个程序员、每个技术屌丝都想拥有的东西，虽然有些人（比如我）根本不知道搭建起来有什么用、有没有人看、会有什么利弊，但是搭建好了，心情总还是好的。","text":"个人博客，也许是每个程序员、每个技术屌丝都想拥有的东西，虽然有些人（比如我）根本不知道搭建起来有什么用、有没有人看、会有什么利弊，但是搭建好了，心情总还是好的。 小白也可以免费拥有自己的个人博客 个人博客，也许是每个程序员、每个技术屌丝都想拥有的东西，虽然有些人（比如我）根本不知道搭建起来有什么用、有没有人看、会有什么利弊，但是搭建好了，心情总还是好的。鉴于此，在以前研究的基础上，今天再重新来一次，和大家一起免费搭建一个属于自己的博客。 需要准备的东西电脑一台 win7、win10均可 可联网 能开机 。。。 相关软件 NodeJs（基础环境软件） Git Bash（基础环境软件） Notepad++（文本编辑工具） MarkdownPad 2（MD文件编辑工具） 自己的域名（有了，可以彰显个性，没有的，也能实现效果） GitHub账号（最终博客部署到这里） 图床（本来用的新浪微博的，现在好像不好用了） 搭建本地环境1.安装NodeJs 下载NodeJs，点我下载，下载的时候，选择LTS长期维护版就可以了。一路NEXT安装即可。 安装完毕后，在CMD窗口下输入node -v 来查看版本。 2.安装Git Bash 下载Git，点我下载，下载的时候，网站会自动识别你的系统版本，32或者64位，保存文件就行。一路NEXT安装即可。 安装完毕后，在CMD窗口下输入node -v 来查看版本。 3.安装hexo 选择一个目录，用于存放你的博客文件，我的是D:\\NewBlog，在该文件夹里，按住Shift+鼠标右键，点击在此处打开命令窗口，在弹出的命令窗口里，输入命令，修改npm镜像，换成淘宝的镜像，不然安装插件会很慢，或者安装不上。 npm install -g cnpm --registry=https://registry.npm.taobao.org 完成以后，输入命令，开始安装hexo cnpm install -g hexo-cli 成功后，输入命令，分别查看npm和hexo版本 npm -v 和 hexo -v 4.部署本地hexo 仍然在刚才的文件夹里，点击鼠标右键，选择Git Bash Here，在弹出的命令窗口里输入hexo init进行初始化，初始化完成后，可以看到若干文件和文件夹。 5.测试本地效果 依次输入，注意是依次，不是一次！！！一句一句的输入！！！ hexo clean hexo generate hexo server 然后打开浏览器，输入 http://localhost:4000 就能看到你的博客页面了。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://nlrr.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"http://nlrr.github.io/tags/blog/"}],"author":"NLRR"},{"title":"【2019】纯小白部署Hexo博客-（三）发布到Github","slug":"【2019】纯小白部署Hexo博客-（三）发布到Github","date":"2019-11-07T16:00:00.000Z","updated":"2019-11-11T14:14:29.085Z","comments":true,"path":"2019/11/08/【2019】纯小白部署Hexo博客-（三）发布到Github/","link":"","permalink":"http://nlrr.github.io/2019/11/08/%E3%80%902019%E3%80%91%E7%BA%AF%E5%B0%8F%E7%99%BD%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2-%EF%BC%88%E4%B8%89%EF%BC%89%E5%8F%91%E5%B8%83%E5%88%B0Github/","excerpt":"Github 对于一个屌丝来说，就相当于一个免费的服务器，今天来说一下，怎么把自己的hexo博客，部署到Github上。","text":"Github 对于一个屌丝来说，就相当于一个免费的服务器，今天来说一下，怎么把自己的hexo博客，部署到Github上。 注册GitHub怎么注册github，一搜一大把，没有什么技术含量，在这里就不多说了。有账号以后，就登陆Github就好了。 新建仓库登陆以后，点击+找到New repository，新建一个仓库。 在Repository name里输入 yourname.github.io ，Description随便写，勾选Initialize this repository with a README 。 最后，点击Create reporitory 新建仓库。 这样，仓库就建好了。 新建分支这里新建一个分支是为了以后保存博客源文件的，如果你不考虑这一项的话，可以跳过。 点击Branch：maseter，在提示框里输入分支名字，我的是blog-src，取什么名字都可以。你随意。然后点击Create Branch：分支名字，就可以新建分支了。 这里，只新建，至于怎么使用，后期再说。~ 配置秘钥1.在Git Bash命令窗口里设置用户名和邮箱，注意实际操作中，引号内要改成你自己的用户名和邮箱。 $git config --global user.name &quot;yourname&quot; $git config --global user.email &quot;youremail&quot;rutu 2.然后生成ssh密钥 $ssh-keygen -t rsa -C &quot;youremail@example.com&quot;3.复制密钥，便于粘贴$clip &lt; ~/.ssh/id_rsa.pub4.登录Github网站—个人设置—SSH And GPGKeys—NEW SSH KEY Title：随便写 Key：用Ctrl+v 直接粘贴就行 最后，点击Add SSH Key 按钮，增加SSh Key。 5.测试密钥效果$ ssh -T git@github.com 当看到Are you sure you want to continue connecting (yes/no/[fingerprint])? 提示的时候，输入yes即可。 最后，看到类似Hi XXXX! You&#39;ve successfully . . .就表示成功了。 发布到Github1.配置_config.yml文件打开博客根目录下的_config.yml文件，按照下面的格式来修改。 deploy: type:修改为（注意冒号后面有个空格）： deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master然后保存。 2.安装部署用插件在Git命令窗口下输入以下命令： $ cnpm install hexo-deployer-git --save然后依次执行下面三个命令，就可以把博客部署到github上去了。（记住，是依次~） $hexo clean $hexo generate /可简写为 hexo g $hexo deploy /可简写为hexo d 根据经验来看，部署成功以后，大概要等个几分钟，才能看到效果。不知道是不是网络延迟的问题。还记得自己的域名吧？yourname.github.io 3.自定义域名Github+hexo自定义的域名方法有很多种，我也抛砖引玉一下。 首先，用你自己的电脑ping一下Github给你的域名：yourname.github.io，得到一个IP地址，比如：115.119.111.153。 然后去自己购买域名的地方，添加A记录，比如域名是NLRR.OOO，添加一个A记录，BLOG.NLRR.OOO指向刚才ping的地址，就可以啦。 在MyBlog\\source目录下，新建一个文件，CNAME，注意没有后缀名。里边就写上你刚才做的A记录的域名就可以了。 然后依次执行hexo clean 、hexo g 、hexo d 三个命令，就可以把博客部署到github上去了。（记住，是依次~） 正常来讲，部署hexo到Github就完事儿了。你就可以用现在的教程发布新的博客文章了。下次有机会，和大家一起探讨一下，更换电脑如何继续写你原来的博客。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://nlrr.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"http://nlrr.github.io/tags/blog/"}],"author":"NLRR"},{"title":"【2019】纯小白部署Hexo博客-（二）修改主题模板","slug":"【2019】纯小白部署Hexo博客-（二）修改主题模板","date":"2019-11-07T16:00:00.000Z","updated":"2019-11-11T14:14:06.881Z","comments":true,"path":"2019/11/08/【2019】纯小白部署Hexo博客-（二）修改主题模板/","link":"","permalink":"http://nlrr.github.io/2019/11/08/%E3%80%902019%E3%80%91%E7%BA%AF%E5%B0%8F%E7%99%BD%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2-%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E6%A8%A1%E6%9D%BF/","excerpt":"一个好看的模板，能让你的博客锦上添花，也使人赏心悦目。至于模板好看不好看，那就萝卜白菜，各有所爱了~","text":"一个好看的模板，能让你的博客锦上添花，也使人赏心悦目。至于模板好看不好看，那就萝卜白菜，各有所爱了~ 我是自己随便找了一个模板，个人感觉挺简单的，所以就随便改了改。打开HEXO官网，找到主题选项点我直达，从里边选择自己喜欢的。点图看效果，点字找源码。 经过一番筛选，我选择了自己感觉还行的主题MiHo 主题效果 主题源码 安装主题打开主题源码，作者有详细的介绍，如何去安装这个主题，包括如何设置这个主题。 跟随者作者的脚步，来试试吧。 原文是英文的，如果你的英语（PinYin）水平不怎么样的话，请自觉点击中文版 方式一$ git clone https://github.com/WongMinHo/hexo-theme-miho.git themes/miho方式二DownloadZip，解压至你的博客文件下的themes文件夹里边，并改名为miho。我太笨，所以用第二种方法。 启用主题在博客文件夹根目录下，打开_config.yml（建议用Notepad++打开），修改theme: miho（miho就是你的文件夹名） 修改主题对于主题里的_config.yml配置，我在这里就不多说了，因为作者已经讲得很清楚了。请参照作者的说明文件中文版。 在这里给大家顺便说一下，如何修改logo和自己的二维码。 最简单的方法，找到他的logo和二维码的图片位置，记住这三个图片的尺寸大小和文件类型 例如：图片位置都在MyBlog\\themes\\miho\\source\\images文件夹下，logo是png格式，两个二维码是jpg格式，直接用原来的文件名，替换成你自己的图片就行了。 logo.png （120 × 120）（首页LOGO） banner.jpeg（1920*420）（首页Banner） alipay_code.jpg （200 × 200）（支付宝二维码） wechat_code.jpg （200 × 200）（微信收款二维码） 还有一个单独的ico文件 MyBlog\\themes\\miho\\source\\favicon.ico （32 × 32）（浏览器的ICO图标） 直接把这四个文件，替换成你自己的图片就行了，记住还用原来的文件名，还在原来的位置，最好还是原来的像素大小。 然后可以在git命令窗口下，重新生成，看看效果。 $hexo clean $hexo generate $hexo server然后，等一会儿就能看到你修改后的博客页面了。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://nlrr.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"http://nlrr.github.io/tags/blog/"}],"author":"NLRR"},{"title":"【2019】纯小白部署Hexo博客-（五）换电脑也要续写博客","slug":"【2019】纯小白部署Hexo博客-（五）换电脑也要续写博客","date":"2019-11-07T16:00:00.000Z","updated":"2019-11-11T14:15:00.315Z","comments":true,"path":"2019/11/08/【2019】纯小白部署Hexo博客-（五）换电脑也要续写博客/","link":"","permalink":"http://nlrr.github.io/2019/11/08/%E3%80%902019%E3%80%91%E7%BA%AF%E5%B0%8F%E7%99%BD%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2-%EF%BC%88%E4%BA%94%EF%BC%89%E6%8D%A2%E7%94%B5%E8%84%91%E4%B9%9F%E8%A6%81%E7%BB%AD%E5%86%99%E5%8D%9A%E5%AE%A2/","excerpt":"好不容易部署好的博客，一旦换了电脑就没发继续了，又要重新来一遍。。。于是有了这篇文章。。。。","text":"好不容易部署好的博客，一旦换了电脑就没发继续了，又要重新来一遍。。。于是有了这篇文章。。。。 安装环境跟最初的教程一样，要安装几个软件。 1.安装NodeJs 2.安装Git Bash 安装完Git要设置用户名称和邮件地址。这样做很重要，因为每一个Git的提交都会使用这些信息，并且它会写入你的每一次提交中，不可更改： $ git config --global user.name &quot;username&quot; $ git config --global user.email &quot;username@example.com&quot; 3.与github建立联系-设置SSH keys 输入以下指令（邮箱就是你注册Github时候的邮箱）： ssh-keygen -t rsa -C &quot;youremail&quot;之后一路回车即可。完成后，会在用户主目录下生成.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH key密钥对，id_rsa是私钥，id_rsa.pub是公钥。打开文件中id_rsa.pub直接复制其内容，接着，在GitHub右上方点击头像，选择Settings，在右边的Personal settings侧边栏选择SSH and GPG Keys。接着选择SSH keys右边的New SSH key,其中Title随便写，然后粘贴key，点击”Add key”按钮。 最后，测试链接： $ ssh -T git@github.com这时候可能会看到有警告，没事，输入“yes”就好 4.安装Hexo 在电脑桌面任意位置点击鼠标右键，选择Git Base。输入以下命令： npm install -g hexo 5.复制原来的文件 安装好后，下面就将原来的文件拷贝到新电脑中，但是要注意哪些文件是必须的，哪些文件是可以删除的。 讨论下哪些文件是必须拷贝的：首先是之前自己修改的文件，像站点配置_config.yml，theme文件夹里面的主题，以及source里面自己写的博客文件，这些肯定要拷贝的。除此之外，还有三个文件需要有，就是scaffolds文件夹（文章的模板）、package.json（说明使用哪些包）和.gitignore（限定在提交的时候哪些文件可以忽略）。其实，这三个文件不是我们修改的，所以即使丢失了，也没有关系，我们可以建立一个新的文件夹，然后在里面执行hexo init，就会生成这三个文件，我们只需要将它们拷贝过来使用即可。 总结:_config.yml，theme/，source/，scaffolds/，package.json，.gitignore，是需要拷贝的。 再讨论下哪些文件是不必拷贝的，或者说可以删除的：首先是.git文件，无论是在站点根目录下，还是主题目录下的.git文件，都可以删掉。然后是文件夹node_modules（在用npm install会重新生成），public（这个在用hexo g时会重新生成），.deploy_git文件夹（在使用hexo d时也会重新生成），db.json文件。其实上面这些文件也就是.gitignore文件里面记载的可以忽略的内容。 总结：.git/，node_modules/，public/，.deploy_git/，db.json文件需要删除。 6.模块安装 在新拷贝的文件夹里，右键选择git bash，使用 npm install 命令，进行模块安装。这里不要使用hexo init初始化，因为有的文件我们已经拷贝生成过来了，所以不必用hexo init去整体初始化，如果不慎在此时用了hexo init，则站点的配置文件_config.yml里面内容会被清空使用默认值，所以这一步一定要慎重，不要用hexo init。 $ npm install hexo-deployer-git --save 7.最后，部署到Github $ hexo clean $ hexo generate $ hexo deploy 找到该仓库—setting—Branches—Default Branch，选择blog-src-files分支，最后点UPDATE即可。 本地设置添加.gitinore文件，这个文件的主要作用是过滤一些不需要存放在github远程仓库的一些文件，在备份博客源代码的时候。在根目录下面没有这个文件，可以新建这个文件。一般情况下，是默认就有的，如果没有就自己新建。 将源码推送到新建到分支上$ git init $ git remote add origin git@github.com:yourname/yourname.github.io.git $ git checkout -b 分支名 // 新建一个分支 $ git pull --rebase origin master $ git add . $ git commit -m &apos;add hexo-blog origin code&apos; $ git push origin 新建的分支名blog-src 然后就可以看到所有的源码，都被推送到Github的blog-src-files分支上啦。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://nlrr.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"http://nlrr.github.io/tags/blog/"}],"author":"NLRR"},{"title":"【2019】纯小白部署Hexo博客-（四）保存博客源码到Github","slug":"【2019】纯小白部署Hexo博客-（四）保存博客源码到Github","date":"2019-11-07T16:00:00.000Z","updated":"2019-11-11T14:14:39.290Z","comments":true,"path":"2019/11/08/【2019】纯小白部署Hexo博客-（四）保存博客源码到Github/","link":"","permalink":"http://nlrr.github.io/2019/11/08/%E3%80%902019%E3%80%91%E7%BA%AF%E5%B0%8F%E7%99%BD%E9%83%A8%E7%BD%B2Hexo%E5%8D%9A%E5%AE%A2-%EF%BC%88%E5%9B%9B%EF%BC%89%E4%BF%9D%E5%AD%98%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%B0Github/","excerpt":"hexo+Github最大的问题就是，更换电脑，无法继续写原来的博客，因为Github保存的是把MD生成html以后的文件，所以看不到源文件，也就无法继续更新了。","text":"hexo+Github最大的问题就是，更换电脑，无法继续写原来的博客，因为Github保存的是把MD生成html以后的文件，所以看不到源文件，也就无法继续更新了。 GitHub设置还记得上次说过的，新建分支的事儿么？现在就在网站上，把新建的分支设置为默认分支。方法如下： 找到该仓库—setting—Branches—Default Branch，选择blog-src-files分支，最后点UPDATE即可。 本地设置添加.gitinore文件，这个文件的主要作用是过滤一些不需要存放在github远程仓库的一些文件，在备份博客源代码的时候。在根目录下面没有这个文件，可以新建这个文件。一般情况下，是默认就有的，如果没有就自己新建。 将源码推送到新建到分支上$ git init $ git remote add origin git@github.com:yourname/yourname.github.io.git $ git checkout -b 分支名 // 新建一个分支 $ git pull --rebase origin master $ git add . $ git commit -m &apos;add hexo-blog origin code&apos; $ git push origin 新建的分支名blog-src 然后就可以看到所有的源码，都被推送到Github的blog-src-files分支上啦。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://nlrr.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://nlrr.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"http://nlrr.github.io/tags/blog/"}],"author":"NLRR"}]}